

# This is here to break circular dependencies, since this interface is
# threaded through almost everything.
java_library(
  name = 'interfaces',
  srcs = [
    'CellPathResolver.java',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

java_library(
  name = 'rule_key',
  srcs = [
    'RuleKey.java',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

# Ideally, BuildRule.java would require only a handful of other source files
# in order to compile it. Because BuildContext is referenced in the BuildRule
# interface, its dependencies are much broader than desired.
java_immutables_library(
  name = 'build_rule',
  srcs = [
    'AbstractActionGraphAndResolver.java',
    'AbstractBuildRule.java',
    'AbstractBuildRuleType.java',
    'Tool.java',
    'ToolProvider.java',
    'VersionedTool.java',
    'VisibilityPattern.java',
    'VisibilityPatternParser.java',
  ],
  immutable_types = [
    'BuildRuleType',
    'ExopackageInfo',
    'ExternalTestRunnerTestSpec',
    'ImmutableBuildContext',
    'Label',
    'SourceWithFlags',
  ],
  tests = [
    '//test/com/facebook/buck/rules/coercer:coercer',
    '//test/com/facebook/buck/rules:rules',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

java_library(
  name = 'Sha1HashCode',
  srcs = [
    'Sha1HashCode.java',
  ],
  tests = [
    '//test/com/facebook/buck/rules:rules',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

java_library(
  name = 'target_graph_hashing',
  srcs = [
    'TargetGraphHashing.java',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

java_library(
  name = 'build_event',
  srcs = [
    'BuildEvent.java',
  ],
  autodeps = True,
)

java_immutables_library(
  name = 'rules',
  srcs = [
    'AbstractBuildRuleKeys.java',
    'AbstractRuleScheduleInfo.java',
    'AssociatedTargetNodePredicate.java',
    'BinaryWrapperRule.java',
    'BuildOutputInitializer.java',
    'BuildRuleEvent.java',
    'CachingBuildEngine.java',
    'DefaultBuildableContext.java',
    'ExternalTestRunnerRule.java',
    'IndividualTestEvent.java',
    'InitializableFromDisk.java',
    'InstallableApk.java',
    'Manifest.java',
    'NoopBuildRule.java',
    'NoopBuildRuleWithTests.java',
    'OverrideScheduleRule.java',
    'ProjectConfig.java',
    'ProjectConfigDescription.java',
    'RuleDepsCache.java',
    'SymlinkTree.java',
    'TargetGraphAndTargets.java',
    'TestRule.java',
    'TestRunEvent.java',
    'TestStatusMessageEvent.java',
    'TestSummaryEvent.java',
    'UnskippedRulesTracker.java',
    'WriteStringTemplateRule.java',
  ],
  immutable_types = [
    'BuildRuleKeys',
    'RuleScheduleInfo',
  ],
  tests = [
    '//test/com/facebook/buck/rules:rules',
  ],
  autodeps = True,
  exported_deps = [
    # For some reason, :build_event is not a PUBLIC rule. As such, we export it
    # explicitly as part of :rules even though it is not used by any of its
    # srcs. This is probably for legacy reasons: we can (and should) move
    # :build_event into its own package and make it a PUBLIC rule.
    '//src/com/facebook/buck/rules:build_event',
  ],
  visibility = ['PUBLIC'],
)

java_library(
  name = 'command_tool',
  srcs = [
    'CommandTool.java',
  ],
  tests = [
    '//test/com/facebook/buck/rules:rules',
  ],
  autodeps = True,
  visibility = ['PUBLIC'],
)

java_library(
  name = 'action_graph_cache',
  srcs = [
    'ActionGraphCache.java',
  ],
  tests = [
    '//test/com/facebook/buck/rules:rules',
  ],
  autodeps = True,
  visibility = ['PUBLIC'],
)
